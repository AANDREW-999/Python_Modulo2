"""
Ejercicio 3: Validador de Contrase√±as

Este programa solicita al usuario que cree una contrase√±a y la valida
bas√°ndose en un conjunto de reglas. El bucle continuar√° hasta que la
contrase√±a cumpla con todos los criterios de seguridad.
"""


def validar_contrasena(contrasena: str) -> dict:
    """
    Valida una contrase√±a seg√∫n criterios de seguridad espec√≠ficos.

    Args:
        contrasena (str): La contrase√±a a validar.

    Returns:
        dict: Un diccionario con los resultados de la validaci√≥n.
              'valida': bool (True si es v√°lida, False en caso contrario).
              'mensajes': list (Lista de strings con los errores encontrados).
    """
    mensajes_error = []
    es_valida = True

    # Criterio 1: Longitud m√≠nima de 8 caracteres
    if len(contrasena) < 8:
        mensajes_error.append("‚ùå La contrase√±a debe tener al menos 8 caracteres.")
        es_valida = False

    # Criterio 2: Al menos una letra may√∫scula
    if not any(c.isupper() for c in contrasena):
        mensajes_error.append("‚ùå La contrase√±a debe contener al menos una letra may√∫scula.")
        es_valida = False

    # Criterio 3: Al menos un n√∫mero
    if not any(c.isdigit() for c in contrasena):
        mensajes_error.append("‚ùå La contrase√±a debe contener al menos un n√∫mero.")
        es_valida = False

    return {"valida": es_valida, "mensajes": mensajes_error}


def main():
    """
    Funci√≥n main que pide la contrase√±a y la valida en un bucle.
    """
    print("üîê Creador de Contrase√±as Seguras")
    print("Criterios de validaci√≥n:")
    print(" 1. M√≠nimo 8 caracteres")
    print(" 2. Al menos una letra may√∫scula")
    print(" 3. Al menos un n√∫mero")

    while True:
        contrasena = input("\nIngrese una nueva contrase√±a: ")

        # Validaci√≥n de entrada vac√≠a
        if contrasena == "":
            print("‚ö†Ô∏è Advertencia: No puede ingresar una contrase√±a vac√≠a.")
            continue

        resultado_validacion = validar_contrasena(contrasena)

        if resultado_validacion["valida"]:
            print("\n‚úÖ ¬°Contrase√±a v√°lida! Ha cumplido con todos los requisitos.")
            break
        else:
            print("\n‚õî La contrase√±a no es v√°lida. Revise los siguientes errores:")
            for mensaje in resultado_validacion["mensajes"]:
                print(mensaje)


if __name__ == "__main__":
    main()