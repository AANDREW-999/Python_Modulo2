"""
Ejercicio 3: Validador de Contrase√±as

Este programa solicita una contrase√±a y la valida usando un conjunto de reglas.
Toda la l√≥gica de validaci√≥n est√° encapsulada en la funci√≥n `validar_contrasena`
para facilitar las pruebas y la reutilizaci√≥n.
"""


def validar_contrasena(contrasena: str) -> bool:
    """
    Valida una contrase√±a seg√∫n criterios de seguridad. Si es v√°lida, retorna True.
    Si no cumple alguna regla, lanza un error ValueError con el motivo.

    Args:
        contrasena (str): La contrase√±a a validar.
    Returns:
        bool: True si la contrase√±a es v√°lida.
    Raises:
        ValueError: Si la contrase√±a no cumple con alguna de las reglas.
    """
    # 1. Validaci√≥n de entrada vac√≠a o solo con espacios
    if not contrasena.strip():
        raise ValueError("la contrase√±a no puede estar vac√≠a ni contener solo espacios")

    # 2. Criterio: Longitud m√≠nima de 8 caracteres
    if len(contrasena) < 8:
        raise ValueError("la contrase√±a debe tener al menos 8 caracteres")

    # 3. Criterio: Al menos una letra may√∫scula
    if not any(c.isupper() for c in contrasena):
        raise ValueError("la contrase√±a debe contener al menos una letra may√∫scula")

    # 4. Criterio: Al menos un n√∫mero
    if not any(c.isdigit() for c in contrasena):
        raise ValueError("la contrase√±a debe contener al menos un n√∫mero")

    # Si todas las validaciones pasan, la contrase√±a es correcta
    return True


def principal():
    """
    Funci√≥n principal que pide la contrase√±a y la valida en un bucle.
    """
    print("üîê Creador de Contrase√±as Seguras")
    print("   1. M√≠nimo 8 caracteres")
    print("   2. Al menos una letra may√∫scula")
    print("   3. Al menos un n√∫mero")

    while True:
        try:
            contrasena_usuario = input("\nIngrese una nueva contrase√±a: ")

            # Se llama a la funci√≥n que contiene toda la l√≥gica
            if validar_contrasena(contrasena_usuario):
                print("\n‚úÖ ¬°Contrase√±a v√°lida y segura! Ha cumplido con todos los requisitos.")
                break  # Si es v√°lida, salimos del bucle

        except ValueError as e:
            # Si validar_contrasena lanza un error, lo capturamos y mostramos aqu√≠
            print(f"‚õî Error: {e}")


if __name__ == "__main__":
    principal()