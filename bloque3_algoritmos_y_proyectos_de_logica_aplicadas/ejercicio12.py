"""
Ejercicio 12: Simulador de Lanzamiento de Dados

Este programa simula el lanzamiento de dos dados y reporta la frecuencia de cada suma.
La l√≥gica est√° separada en funciones de validaci√≥n y simulaci√≥n para mayor claridad.
"""
import random
from typing import Dict

# Constante de ejemplo para la simulaci√≥n
NUMERO_LANZAMIENTOS_POR_DEFECTO = 10000


def validar_numero_lanzamientos(num_lanzamientos: str) -> int:
    """
    Valida que la entrada sea un n√∫mero entero y positivo.

    Args:
        num_lanzamientos (str): El n√∫mero de lanzamientos como cadena de texto.

    Returns:
        int: El n√∫mero de lanzamientos validado.

    Raises:
        ValueError: Si la entrada no es un n√∫mero entero o si es un n√∫mero negativo.
    """
    try:
        lanzamientos = int(num_lanzamientos)
    except (ValueError, TypeError):
        raise ValueError("El n√∫mero de lanzamientos debe ser un n√∫mero entero.")

    if lanzamientos < 0:
        raise ValueError("El n√∫mero de lanzamientos no puede ser negativo.")

    return lanzamientos


def simular_lanzamientos(numero_lanzamientos: int) -> Dict[int, int]:
    """
    Simula el lanzamiento de dos dados y cuenta la frecuencia de cada suma.

    Esta funci√≥n asume que el `numero_lanzamientos` ya fue validado.

    Args:
        numero_lanzamientos (int): La cantidad de veces que se simular√°n los lanzamientos.

    Returns:
        Dict[int, int]: Un diccionario con la suma como clave y la frecuencia como valor.
    """
    frecuencias = {i: 0 for i in range(2, 13)}  # Inicializa el diccionario con todas las sumas posibles

    for _ in range(numero_lanzamientos):
        dado1 = random.randint(1, 6)
        dado2 = random.randint(1, 6)
        suma = dado1 + dado2
        frecuencias[suma] += 1

    return frecuencias


def main():
    """
    Funci√≥n principal que solicita el n√∫mero de lanzamientos al usuario,
    ejecuta la simulaci√≥n y muestra el reporte de frecuencias.
    """
    print("üé≤ Simulador de Lanzamiento de Dados üé≤")

    while True:
        try:
            input_lanzamientos = input(f"\nIngrese el n√∫mero de lanzamientos (ej: {NUMERO_LANZAMIENTOS_POR_DEFECTO}): ")
            num_lanzamientos = validar_numero_lanzamientos(input_lanzamientos)
            break
        except ValueError as e:
            print(f"‚ùå Error: {e}")

    # Llama a la funci√≥n que realiza la simulaci√≥n
    resultados = simular_lanzamientos(num_lanzamientos)

    print(f"\n‚úÖ Resultados de la simulaci√≥n de {num_lanzamientos} lanzamientos:")

    # Itera sobre los resultados y muestra el reporte
    for suma in sorted(resultados.keys()):
        frecuencia = resultados[suma]
        print(f"La suma {suma} apareci√≥ {frecuencia} veces.")


if __name__ == "__main__":
    main()