"""
Ejercicio 11: Validador de C√©dula (Algoritmo Simple)

Este programa valida un n√∫mero de c√©dula seg√∫n una regla simple: la suma
de sus d√≠gitos debe ser un n√∫mero par. El programa solicita la c√©dula
al usuario en un bucle hasta que ingrese una v√°lida.
"""
from typing import List


def validar_cedula(cedula: str) -> bool:
    """
    Valida un n√∫mero de c√©dula comprobando si la suma de sus d√≠gitos es par.

    Args:
        cedula (str): El n√∫mero de c√©dula como una cadena de texto.

    Returns:
        bool: True si la suma de los d√≠gitos es par, False en caso contrario.
    """
    # 1. Calcular la suma de los d√≠gitos
    # Se usa un generador para mayor eficiencia
    suma_digitos = sum(int(digito) for digito in cedula)

    # 2. Comprobar si la suma es par y devolver el resultado directamente
    return suma_digitos % 2 == 0


def main():
    """
    Funci√≥n principal que solicita y valida la c√©dula del usuario en un bucle.
    """
    print("üõÇ Validador de C√©dula üõÇ")
    print("La c√©dula debe tener 10 d√≠gitos y la suma de estos debe ser par.")

    while True:
        cedula_usuario = input("\nIngrese su n√∫mero de c√©dula (10 d√≠gitos): ").strip()

        # --- Validaciones previas antes de la l√≥gica principal ---

        # 1. Validar si contiene solo n√∫meros
        if not cedula_usuario.isdigit():
            print("‚ùå Error: La c√©dula debe contener √∫nicamente n√∫meros.")
            continue  # Vuelve al inicio del bucle

        # 2. Validar la longitud exacta de 10 d√≠gitos
        if len(cedula_usuario) != 10:
            print(f"‚ùå Error: La c√©dula debe tener 10 d√≠gitos (usted ingres√≥ {len(cedula_usuario)}).")
            continue  # Vuelve al inicio del bucle

        # --- Si las validaciones de formato son correctas, se aplica la regla ---
        if validar_cedula(cedula_usuario):
            print(f"‚úÖ ¬°C√©dula v√°lida! La suma de sus d√≠gitos es par.")
            break  # Termina el programa
        else:
            print("‚ùå C√©dula no v√°lida. La suma de sus d√≠gitos es impar. Intente de nuevo.")


if __name__ == "__main__":
    main()